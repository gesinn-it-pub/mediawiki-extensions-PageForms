{
	"description": "form input combobox",
	"setup": [
		{
			"namespace": "SMW_NS_PROPERTY",
			"page": "Text Property",
			"contents": "[[Has type::Text]]"
		},
		{
			"namespace": "PF_NS_FORM",
			"page": "Combobox without values",
			"contents": "{{{field|Combobox|input type=combobox}}}"
		},
		{
			"namespace": "PF_NS_FORM",
			"page": "Combobox with parameter placeholder",
			"contents": "{{{field|Combobox|input type=combobox|placeholder=This is TEST}}}"
		},
		{
			"namespace": "PF_NS_FORM",
			"page": "Combobox with parameter existing values only",
			"contents": "{{{field|Combobox|input type=combobox|existing values only}}}"
		},
		{
			"namespace": "PF_NS_FORM",
			"page": "Combobox with parameter show on select",
			"contents": "{{{field|Combobox|input type=combobox|show on select=Test}}}"
		}
	],
	"tests": [
		{
			"type": "special",
			"about": "Combobox without values",
			"special-page": {
				"page": "FormEdit",
				"query-parameters": "Combobox without values/01",
				"request-parameters": {}
			},
			"assert-output": {
				"to-contain": [
					"<span id=\"span_1\" class=\"comboboxSpan\" data-input-type=\"combobox\">",
					"<select id=\"input_1\" name=\"standard input[Combobox]\" class=\"pfComboBox\" tabindex=\"1\" autocompletesettings=\"\" data-size=\"210\" style=\"width:210px\">",
					"<option value=\"\"></option>",
                    "<option selected=\"\"></option>"
				],
				"not-contain": [
					"placeholder=\"This is TEST\""
				]
		    }
		},
		{
			"type": "special",
			"about": "Combobox with parameter placeholder",
			"special-page": {
				"page": "FormEdit",
				"query-parameters": "Combobox with parameter placeholder/01",
				"request-parameters": {}
			},
			"assert-output": {
				"to-contain": [
					"<span id=\"span_1\" class=\"comboboxSpan\" data-input-type=\"combobox\">",
					"<select id=\"input_1\" name=\"standard input[Combobox]\" class=\"pfComboBox\" tabindex=\"1\" autocompletesettings=\"\" data-size=\"210\" style=\"width:210px\" placeholder=\"This is TEST\""
				],
				"not-contain": [
					"existingvaluesonly=\"true\""
				]
			}
		},
		{
			"type": "special",
			"about": "Combobox with parameter existing values only",
			"special-page": {
				"page": "FormEdit",
				"query-parameters": "Combobox with parameter existing values only/01",
				"request-parameters": {}
			},
			"assert-output": {
				"to-contain": [
					"<span id=\"span_1\" class=\"comboboxSpan\" data-input-type=\"combobox\">",
					"<select id=\"input_1\" name=\"standard input[Combobox]\" class=\"pfComboBox\" tabindex=\"1\" autocompletesettings=\"\" data-size=\"210\" style=\"width:210px\" existingvaluesonly=\"true\""
				]
			}
		},
		{
			"type": "special",
			"about": "Combobox with parameter show on select",
			"special-page": {
				"page": "FormEdit",
				"query-parameters": "Combobox with parameter show on select/01",
				"request-parameters": {}
			},
			"assert-output": {
				"to-contain": [
					"<span id=\"span_1\" class=\"comboboxSpan pfShowIfSelected\" data-input-type=\"combobox\">",
					"<select id=\"input_1\" name=\"standard input[Combobox]\" class=\"pfComboBox\" tabindex=\"1\" autocompletesettings=\"\" data-size=\"210\" style=\"width:210px\""
				]
			}
		}
	],
	"settings": {
		"wgLang": "en"
	},
	"meta": {
		"version": "2",
		"is-incomplete": false,
		"debug": false
	}
}
